I"Ë^<h2 id="z√°kladn√≠-informace-o-jazyku-python">Z√°kladn√≠ informace o jazyku Python</h2>
<p>Co o Python ≈ô√≠k√° ofici√°ln√≠ web:</p>

<blockquote>
  <p>Python is a programming language that lets you work quickly
and integrate systems more effectively.</p>
</blockquote>

<h4 id="u≈æiteƒçn√©-odkazy">U≈æiteƒçn√© odkazy</h4>
<ul>
  <li><a href="https://docs.python.org/3/">Dokumentace jazyka Python3</a></li>
  <li><a href="https://docs.python-guide.org">The Hitchhiker‚Äôs Guide to Python!</a></li>
  <li><a href="https://realpython.com">Real Python</a></li>
  <li><a href="http://trnecka.inf.upol.cz/teaching/pht/">KMI/PHT Programov√°n√≠ v jazyce Python</a></li>
</ul>

<h3 id="python-27-vs-3x">Python 2.7 vs 3.x</h3>
<p>Vƒõt≈°ina produkce st√°le pou≈æ√≠v√° <code class="language-plaintext highlighter-rouge">Python 2.7</code>, <code class="language-plaintext highlighter-rouge">Python 3</code> je v≈°ak zcela p≈ôipraven pro ostr√© nasazen√≠ do produkce. <code class="language-plaintext highlighter-rouge">Python 2.7</code> bude dost√°vat bezpeƒçnostn√≠ update pouze do roku 2020. V√≠ce info na <a href="https://docs.python-guide.org/starting/which-python/#the-state-of-python-3-2">odkazu</a>.</p>

<h2 id="instalace-jazyka-python-3">Instalace jazyka Python 3</h2>
<p>Osobn√≠ zku≈°enost instalace m√°m pouze na Mac OS a Linux. V instalaci by v√°m mƒõl pomoct n√°sleduj√≠c√≠ <a href="https://docs.python-guide.org/starting/installation/">odkaz</a>.</p>

<blockquote>
  <p><strong>√ökol</strong>
Instalace jazyka Python na v√°mi zvolenou platformu.</p>
</blockquote>

<h2 id="pip-vs-anaconda">Pip vs (Ana)Conda</h2>
<p>Oba dva bal√≠ƒçkovaƒçe pro instalov√°n√≠ program≈Ø/knihoven v r√°mci Python ekosyst√©mu. Anaconda zamƒõ≈ôen√° v√≠ce na vƒõdeck√Ω Python (dataminig, machine learning). Conda nejenom pro Python, na PC na univerzitƒõ najdete Condu.</p>

<h2 id="ide">IDE</h2>
<p>Python je mo≈æn√© ps√°t v jak√©mkoli textov√©m editoru <a href="https://docs.python.org/3/tutorial/interpreter.html">p≈ô√≠padnƒõ pou≈æ√≠vat Python interpretr</a>.</p>

<h4 id="doporuƒçen√©-python-ide">Doporuƒçen√© Python IDE</h4>
<ul>
  <li>Vim/Emacs (sadomasochisti)</li>
  <li><a href="https://code.visualstudio.com">Visual Studio Code</a></li>
  <li><a href="https://pythonhosted.org/spyder/installation.html">Spyder</a></li>
  <li>Atom/SublimeText 3</li>
  <li><a href="https://realpython.com/python-ides-code-editors-guide/">Ostatn√≠</a></li>
</ul>

<h3 id="jupyter-notebook">Jupyter notebook</h3>
<p>Jupyter Notebook doporuƒçuji na experimentov√°n√≠ nejenom v jazyce Python. Jupyter umo≈æ≈àuje ps√°t a vyhodnocovat k√≥d rovnou v prohl√≠≈æeƒçi v takzvan√©m <code class="language-plaintext highlighter-rouge">jupyter notebook</code>. V√≠ce informac√≠ naleznete na <a href="http://jupyter.org">ofici√°ln√≠m webu projektu</a>.</p>

<blockquote>
  <p>The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more.</p>
</blockquote>

<blockquote>
  <h2 id="√∫kol">√ökol</h2>
  <p>Zprovoznit liboboln√© IDE (ide√°lnƒõ Jupyter) a otestovat jednoduch√Ω <code class="language-plaintext highlighter-rouge">hello_world.py</code>.</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">hello_world.py</code></p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="k">print</span><span class="p">(</span><span class="s">"Hello world!"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="z√°klady-jazyka-python">Z√°klady jazyka Python</h2>

<p>V√≠ce informac√≠ dostupn√© na odkazu <a href="https://realpython.com/python-first-steps/">https://realpython.com/python-first-steps/</a>. N√°sleduj√≠c√≠ p≈ô√≠klady je mo≈æn√© st√°hnout ve formƒõ <a href="/assets/files/python_basics.ipynb">Jupyter Notebooku</a>.</p>

<h3 id="promnƒõnn√©">Promnƒõnn√©</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="c1"># n√°zev promƒõnn√© by mƒõl v≈ædy obsahovat podtr≈æ√≠tka
</span><span class="n">nazev_promenne</span> <span class="o">=</span> <span class="s">'hodnota'</span>
<span class="n">cislo</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">desetine_cslo</span> <span class="o">=</span> <span class="mf">1.56</span>
<span class="n">boolean</span> <span class="o">=</span> <span class="bp">True</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="seznamy">Seznamy</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="code"><pre><span class="n">seznam</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">seznam_s_hodnotami</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>

<span class="c1"># assert testuje zda je podminka splnena, pouzivano casto u testovani
# testuje zda je hodnota vracena seznam_s_hodnotami[0] rovna 1,
# jelikoz na indexu 0 ocekavame jednicku je podminka splnena a assert uspesne probehne
</span><span class="k">assert</span> <span class="n">seznam_s_hodnotami</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span>

<span class="c1"># test zda je prvek v seznamu
</span><span class="k">assert</span> <span class="mi">1</span> <span class="ow">in</span> <span class="n">seznam_s_hodnotami</span>

<span class="c1"># delka seznamu
</span><span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="n">seznam_s_hodnotami</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span>

<span class="c1"># pridani prvku do seznamu, seznam muze obsahovat rozdilene datove typy
</span><span class="n">seznam_s_hodnotami</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'ahoj'</span><span class="p">)</span>

<span class="k">assert</span> <span class="n">seznam_s_hodnotami</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'ahoj'</span><span class="p">]</span>

<span class="c1"># seznamy lze "rezat"
</span>
<span class="c1"># veskere prvky do indexu 2
</span><span class="k">assert</span> <span class="n">seznam_s_hodnotami</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>

<span class="c1"># veskere prvky od indexu 2
</span><span class="k">assert</span> <span class="n">seznam_s_hodnotami</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span> <span class="o">==</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="s">'ahoj'</span><span class="p">]</span>

<span class="c1"># Seznamy lze libovolne zanorovat, nebo je pouzivat jako frontu, zasobnik, viz dokumentace</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="≈ôetƒõzce">≈òetƒõzce</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="n">retezec</span> <span class="o">=</span> <span class="s">'abba'</span>

<span class="c1"># retezec se chova jako seznam
</span><span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="n">retezec</span><span class="p">)</span> <span class="o">==</span> <span class="mi">4</span>
<span class="k">assert</span> <span class="n">retezec</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s">'a'</span>

<span class="c1"># prirazeni vsak nefunguje
# retezec[0] = 'c'
</span>
<span class="c1"># podretezec ziskame jednoduse
</span><span class="k">assert</span> <span class="n">retezec</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s">'ab'</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="tuple">Tuple</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="c1"># Tuple narozd√≠l od seznamu obsahuje nemƒõnn√© prvky
</span>
<span class="n">toto_je_tuple</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">toto_je_tuple</span><span class="p">)</span>

<span class="c1"># nefunguje
</span><span class="n">toto_je_tuple</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">'ahoj'</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="go">(1, 3, 2)



---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

</span><span class="gp">&lt;ipython-input-51-4dd037267949&gt;</span><span class="w"> </span><span class="k">in</span> &lt;module&gt;<span class="o">()</span>
<span class="go">      6
</span><span class="gp">      7 #</span><span class="w"> </span>nefunguje
<span class="gp">----&gt;</span><span class="w"> </span>8 toto_je_tuple[0] <span class="o">=</span> <span class="s1">'ahoj'</span>
<span class="go">

TypeError: 'tuple' object does not support item assignment</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="slovn√≠ky">Slovn√≠ky</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="n">slovnik</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>

<span class="k">assert</span> <span class="n">slovnik</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'a'</span><span class="p">)</span> <span class="o">==</span> <span class="n">slovnik</span><span class="p">[</span><span class="s">'a'</span><span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="print">Print</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="n">var</span> <span class="o">=</span> <span class="s">'svƒõte'</span>

<span class="c1"># Jde to i takto, ale zn√°me lep≈°√≠
</span><span class="k">print</span><span class="p">(</span><span class="s">"Ahoj "</span> <span class="o">+</span> <span class="n">var</span><span class="p">)</span>

<span class="c1"># Takto se form√°tovalo v Python 3
</span><span class="k">print</span><span class="p">(</span><span class="s">"Ahoj {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">var</span><span class="p">))</span>

<span class="c1"># Takto by se mƒõlo form√°tovat teƒè (Python 3.6+)
</span><span class="k">print</span><span class="p">(</span><span class="s">f"Ahoj </span><span class="si">{</span><span class="n">var</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">cislo</span> <span class="o">=</span> <span class="mi">1</span>

<span class="c1"># Dokonce nen√≠ ani nutn√© p≈ôev√°dƒõt ƒç√≠selnou hodnotu na string
</span><span class="k">print</span><span class="p">(</span><span class="s">f"Krasne cislo </span><span class="si">{</span><span class="n">cislo</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="go">Ahoj svƒõte
Ahoj svƒõte
Ahoj svƒõte
Krasne cislo 1</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="podm√≠nky">Podm√≠nky</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="n">cislo</span> <span class="o">=</span> <span class="mi">1</span>

<span class="k">if</span> <span class="n">cislo</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"zaporne"</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">cislo</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"kladne"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"nula"</span><span class="p">)</span>


<span class="c1"># v podminkach je mozne pouzivat klasicke logicke operatory
</span><span class="k">assert</span> <span class="p">(</span><span class="bp">True</span> <span class="ow">and</span> <span class="bp">False</span><span class="p">)</span> <span class="o">==</span> <span class="bp">False</span>
<span class="k">assert</span> <span class="p">(</span><span class="bp">True</span> <span class="ow">or</span> <span class="bp">False</span><span class="p">)</span> <span class="o">==</span> <span class="bp">True</span>
<span class="k">assert</span> <span class="p">(</span><span class="ow">not</span> <span class="bp">True</span><span class="p">)</span> <span class="o">==</span> <span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
</pre></td><td class="code"><pre><span class="go">kladne</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="cykly">Cykly</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="c1"># Ostatn√≠ programovac√≠ jazyky
</span>
<span class="n">my_items</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>

<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">my_items</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">my_items</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="go">1
2
3
4
5</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="code"><pre><span class="c1"># Python
</span>
<span class="n">my_items</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>

<span class="c1"># nejcasteji pouzivana iterace, for each
</span><span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">my_items</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>

<span class="c1"># pokud precejenom potrebujeme iterovat v nejakem rozmezi pouzivame range()
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">f"Index: </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="c1"># range muzeme pouzit i na sestupnou iteraci
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">f"Sestupny index: </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>


<span class="n">slovnik</span> <span class="o">=</span> <span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>

<span class="c1"># pomoci for each muzeme krasne iterovat pres slovniky,
# ze slovniku je nutne ziskat seznam dvojic 'klic, hodnota' pomoci .items()
</span><span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">slovnik</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">f"klic </span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s"> hodnota </span><span class="si">{</span><span class="n">value</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>

<figure class="highlight"><pre><code class="language-console" data-lang="console"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="go">1
2
3
4
5
Index: 0
Index: 1
Index: 2
Index: 3
Index: 4
Index: 5
Sestupny index: 5
Sestupny index: 4
Sestupny index: 3
Sestupny index: 2
Sestupny index: 1
Sestupny index: 0
klic a hodnota 1
klic b hodnota 2</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h3 id="funkce">Funkce</h3>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="code"><pre><span class="c1"># nazev funkce rovnez obsahuje podtrzitko
</span><span class="k">def</span> <span class="nf">moje_funkce</span><span class="p">(</span><span class="n">argument</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">argument</span> <span class="o">+</span> <span class="mi">1</span>

<span class="k">assert</span> <span class="n">moje_funkce</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="mi">2</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="python-vs-parallel-programming">Python vs. parallel programming</h2>
<p>Je Python vhodn√Ω pro paraleln√≠/distribuovan√© programov√°n√≠?</p>

<h3 id="global-interpreter-lock">Global Interpreter Lock</h3>
<p>GIL je mutex, kter√Ω pom√°h√° udr≈æovat informaci o tom co v r√°mci Pythonu pr√°vƒõ bƒõ≈æ√≠. Z√°rove≈à poskytuje aktu√°ln√≠mu vl√°nknu p≈ô√≠stup k intern√≠m funkc√≠m Python interpretru. V ƒçem je to probl√©m? Pouze jedno vl√°knu m≈Ø≈æe v jeden okam≈æik vyhodnocovat k√≥d v interpretru. Multi-thread scripty jsou ve v√Ωsledku pomalej≈°√≠ ne≈æ single-thread.</p>

<blockquote>
  <p>The GIL is controversial because it prevents multithreaded CPython programs from taking full advantage of multiprocessor systems in certain situations. Note that potentially blocking or long-running operations, such as I/O, image processing, and NumPy number crunching, happen outside the GIL. Therefore it is only in multithreaded programs that spend a lot of time inside the GIL, interpreting CPython bytecode, that the GIL becomes a bottleneck.</p>
</blockquote>

<h3 id="jak-vy≈ôe≈°it-gil-probl√©m">Jak vy≈ôe≈°it GIL probl√©m?</h3>
<p>Ofici√°ln√≠ knihovna <code class="language-plaintext highlighter-rouge">multiprocessing</code> pro jazyk Python je alternativa ≈ôe≈°√≠c√≠ probl√©m s GIL. M√≠sto vytv√°≈ôen√≠ vl√°ken doch√°z√≠ k vytv√°≈ôen√≠ proces≈Ø. Ka≈æd√Ω proces m√° vlastn√≠ GIL a proto ve v√Ωsledku nedoch√°z√≠ k probl√©mu zm√≠nƒõn√©m v√Ω≈°e. V√≠ce informac√≠ a p≈ô√≠klady jsou dostupn√© <a href="https://charlienewey.github.io/parallel-processing-python/">zde</a>.</p>

<h2 id="jak-by-to-tedy-spr√°vnƒõ-mƒõlo-b√Ωt">Jak by to tedy spr√°vnƒõ mƒõlo b√Ωt?</h2>
<p><strong>Scala</strong> <a href="https://www.scala-lang.org">https://www.scala-lang.org</a> + <strong>Apache Spark</strong> <a href="http://spark.apache.org">http://spark.apache.org</a>, <strong>Clojure</strong> <a href="https://clojure.org">https://clojure.org</a>, v√Ωpoƒçty na GPU <strong>CUDA</strong> <a href="https://developer.nvidia.com/cuda-zone">https://developer.nvidia.com/cuda-zone</a> (existuje i API do Python).</p>

<h2 id="proƒç-je-dobr√©-i-tak-umƒõt-python">Proƒç je dobr√© (i tak) umƒõt Python?</h2>
<p>Python je jazyk, kter√Ω z√≠sk√°v√° st√°le v√≠ce a v√≠ce p≈ô√≠znivc≈Ø. Pou≈æivaj√≠ jej firmy jako Google, Apple, Facebook, nebo Seznam.cz. Je to vynikaj√≠c√≠ skriptovac√≠ jazyk na psan√≠ prototyp≈Ø, datamining p≈ô√≠padnƒõ machine learning. Obsahuje nespoƒçet knihoven, kter√© umo≈æ≈àuj√≠ ≈ôe≈°it vƒõt≈°inu probl√©mu rychle a jednodu≈°e. V√≠ce informac√≠ o jazyku Python na <a href="http://www.bestprogramminglanguagefor.me/why-learn-python">odkazu</a>.</p>
:ET